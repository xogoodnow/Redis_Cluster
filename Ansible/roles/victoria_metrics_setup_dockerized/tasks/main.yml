---
- name: check connectivity
  ping:
    data: alive


- name: update and upgrade system
  apt:
    update_cache: yes
    upgrade: dist


- name: Create the required directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
    mode: 0777
    owner: root
    group: root
  with_items:
    - /root/monitoring
    - /root/monitoring/Grafana
    - /root/monitoring/Prometheus
    - /root/monitoring/Alertmanager
    - /root/monitoring/Dashboards
    - /root/monitoring/Grafana/provisioning
    - /root/monitoring/Grafana/provisioning/dashboards



- name: Copy alertmanager files
  copy:
    src: files/Alertmanager/alertmanager.yaml
    dest: /root/monitoring/Alertmanager/
    force: true
    mode: 0777


- name: Copy Grafana files
  copy:
    src: files/Grafana/grafana.ini
    dest: /root/monitoring/Grafana/
    force: true
    mode: 0777


- name: Copy dashboards files
  copy:
    src: files/Grafana/provisioning/dashboards/{{ item }}
    dest: /root/monitoring/Grafana/provisioning/dashboards/
    force: true
    follow: true
    mode: 0777
  with_items:
    - 1860.json
    - dashboards.yaml


- name: Copy Prometheus files
  copy:
    src: files/Prometheus/{{ item }}
    dest: /root/monitoring/Prometheus/
    force: true
    follow: true
    mode: 0777
  with_items:
    - Alert_Rules
    - prometheus.yaml


- name: pull the required images
  docker_image:
    name: "{{ item}}"
    source: pull
  with_items:
    - prom/node-exporter:{{ node_exporter_version }}
    - victoriametrics/vmagent:{{ vmagent_version }}
    - victoriametrics/victoria-metrics:{{ victoria_metrics_version }}
    - grafana/grafana:{{ grafana_version }}
    - victoriametrics/vmalert:{{ vmalert_version }}
    - prom/alertmanager:{{ alertmanager_version }}


- name: Create the required volumes
  docker_volume:
    volume_name: "{{ item }}"
    state: present
  with_items:
    - vmagentdata
    - vmdata
    - grafana_data


- name: Run the container for Node Exporter
  docker_container:
    name: node-exporter
    image: prom/node-exporter:{{ node_exporter_version }}
    restart_policy: unless-stopped
    restart: true
    state: started
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    published_ports:
      - 9100:9100
    network_mode: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro



- name: Run the container for Vmagent
  docker_container:
    name: vmagent
    state: started

    image: victoriametrics/vmagent:{{ vmagent_version }}
    restart_policy: unless-stopped
    restart: true

    published_ports:
      - 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - /root/monitoring/Prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://localhost:8428/api/v1/write"
      - "-promscrape.config.strictParse=false"
    network_mode: host



- name: Run the container for Victoria metrics
  docker_container:
    name: victoriametrics
    state: started
    restart: true
    image: victoriametrics/victoria-metrics:{{ victoria_metrics_version }}
    restart_policy: unless-stopped
    published_ports:
      - 8428:8428
      - 8089:8089
      - 8089:8089/udp
      - 2003:2003
      - 2003:2003/udp
      - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
      - "--vmalert.proxyURL=http://vmalert:8880"
    network_mode: host




- name: Run the container for Grafana
  docker_container:
    name: grafana
    state: started
    restart: true

    image: grafana/grafana:{{ grafana_version }}
    restart_policy: unless-stopped
    published_ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - /root/monitoring/Grafana/:/etc/grafana/
      - /root/monitoring/Grafana/provisioning/dashboards/:/var/lib/grafana/provisioning/dashboards/




- name: Run the container for Vmalert
  docker_container:
    name: vmalert
    image: victoriametrics/vmalert:{{ vmalert_version }}
    state: started
    restart: true

    restart_policy: unless-stopped
    network_mode: host
    published_ports:
      - 8880:8880
    volumes:
      - vmagentdata:/vmagentdata
      - /root/monitoring/Prometheus/Alert_Rules:/etc/alerts/
      - /root/monitoring/Prometheus/:/etc/prometheus/

    command:
      - "--datasource.url=http://localhost:8428/"
      - "--remoteRead.url=http://localhost:8428/"
      - "--remoteWrite.url=http://localhost:8428/"
      - "--notifier.url=http://localhost:9093/"
      - "--rule=/etc/alerts/*.yaml"




- name: Run the container for Alertmanager
  docker_container:
    name: alertmanager
    state: started
    restart: true

    image: prom/alertmanager:{{ alertmanager_version }}
    restart_policy: unless-stopped
    published_ports:
      - 9093:9093
    volumes:
      - vmagentdata:/vmagentdata
      - /root/monitoring/Alertmanager/alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yaml'
    network_mode: host







