---
- name: check connectivity
  ping:
    data: alive


- name: Create the required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0777
  with_items:
    - /etc/redis/cluster
    - /etc/redis/cluster/7000
    - /var/lib/redis/7000
    - /etc/redis/cluster/7001
    - /var/lib/redis/7001




- name: Pull the redis image
  docker_image:
    name: redis:{{ redis_version }}
    source: pull


- name: Set the config file for Redis master instances
  template:
    dest: /etc/redis/cluster/7000/redis_7000.conf
    src: templates/redis_7000.conf
  vars:
    redis_password: "{{ redis_password }}"
    redis_slave_port: "{{ redis_master_port }}"



- name: Set the config file for Redis slave instances
  template:
    dest: /etc/redis/cluster/7001/redis_7001.conf
    src: templates/redis_7001.conf
  vars:
    redis_password: "{{ redis_password }}"
    redis_slave_port: "{{ redis_slave_port }}"






- name: Run the master redis container
  docker_container:
    name: "{{ ansible_host }}-redis-master"
    image: redis:{{ redis_version }}
    restart_policy: unless-stopped
    state: started
    network_mode: host
    command: redis-server /etc/redis/cluster/7000/redis_7000.conf
    volumes:
      - /var/lib/redis/7000/:/var/lib/redis/7000/
      - /etc/redis/cluster/7000/:/etc/redis/cluster/7000/
      - /var/run/redis/:/var/run/redis/
      - /var/log/redis/:/var/log/redis/




- name: Run the master redis container
  docker_container:
    name: "{{ ansible_host }}-redis-slave"
    image: redis:{{ redis_version }}
    restart_policy: unless-stopped
    network_mode: host
    state: started
    command: redis-server /etc/redis/cluster/7001/redis_7001.conf
    volumes:
      - /var/lib/redis/7001/:/var/lib/redis/7001/
      - /etc/redis/cluster/7001/:/etc/redis/cluster/7001/
      - /var/run/redis/:/var/run/redis/
      - /var/log/redis/:/var/log/redis/






